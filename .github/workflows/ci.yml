name: Portfolio CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '21'

jobs:
  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Node.js configuration
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Dependency instalation
        working-directory: ./frontend
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./frontend
        run: npm run coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: frontend/coverage/
          retention-days: 7

  backend-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Java configuration
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Run tests with detailed output
        working-directory: ./backend
        run: |
          ./mvnw clean test -Dtest.output.dir=./test-output

      - name: Upload test results
        if: always()  # This ensures reports are uploaded even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: backend/test-output/
          retention-days: 7

  build:
    needs: [ frontend-tests, backend-tests ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Node.js configuration
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Build frontend
        working-directory: ./frontend
        run: |
          working-directory: ./frontend
          run: |
          npm ci
          npm run build