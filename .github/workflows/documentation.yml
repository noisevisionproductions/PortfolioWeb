name: Documentation

on:
  workflow_run:
    workflows: [ "Portfolio CI" ]
    types: [ completed ]
    branches: [ master ]

env:
  APP_PORT: '9090'

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write
      actions: read

    if: |
      github.event.workflow_run.conclusion == 'success' || 
      github.event.workflow_run.conclusion == 'failure'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Download build application
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: "Portfolio CI"
          workflow_conclusion: success
          name: app-state
          path: backend/target/
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: List downloaded files
        run: |
          echo "Contents of backend/target:"
          ls -la backend/target/

      - name: Install netcat
        run: sudo apt-get install -y netcat-openbsd

      - name: Make Maven Wrapper executable
        working-directory: ./backend
        run: chmod +x mvnw

      - name: Create ket.properties for CI/CD
        working-directory: ./backend/src/main/resources
        run: |
          cat > key.properties << EOF
          jwt.secret.key=${JWT_SECRET_KEY}
          spring.datasource.url=${SPRING_DATASOURCE_URL}
          spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
          spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
          server.port=${SERVER_PORT}
          EOF

      - name: Start Application
        run: |
          echo "Starting application..."
          cd backend
          nohup java -jar target/*.jar > app.log 2>&1 &
          echo "Waiting for application to start..."
          timeout 60 bash -c 'while ! nc -z localhost ${{ env.APP_PORT }}; do sleep 2; done'
          echo "Application started successfully"
          cat app.log

      - name: Generate OpenAPI Documentation
        working-directory: ./backend
        run: |
          sleep 15
          ./mvnw springdoc-openapi:generate \
            -Dspringdoc.api-docs.path=http://localhost:${{ env.APP_PORT }}/v3/api-docs \
            -Dspringdoc.swagger-ui.path=/swagger-ui.html

      - name: Verify Documentation
        working-directory: ./backend
        run: |
          if [ ! -d "target/swagger-ui" ]; then
            echo "Swagger UI directory not found!"
            exit 1
          fi
          if [ ! -f "target/swagger-ui/openapi.json" ]; then
            echo "OpenAPI specification not generated!"
            exit 1
          fi

      - name: Deploy API Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./backend/target/swagger-ui
          destination_dir: docs
          commit_message: "docs: update API documentation"
          enable_jekyll: false

      - name: Upload Documentation Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: api-documentation
          path: backend/target/swagger-ui
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          pkill -f 'java -jar' || true
          echo "Application stopped"