version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: portfolio-db
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "work_mem=4MB"
      - "-c"
      - "maintenance_work_mem=64MB"
    environment:
      - POSTGRES_DB=${PG_DB_NAME}
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - portfolio-network
  redis:
    image: redis:latest
    container_name: portfolio-redis
    ports:
      - "6379:6379"
    networks:
      - portfolio-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: portfolio-backend-dev
    depends_on:
      - postgres
      - redis
    environment:
      - SPRING_DATASOURCE_URL=${PG_URL_DOCKER}
      - SPRING_DATASOURCE_USERNAME=${PG_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${PG_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ./backend:/workspace/app
      - backend_maven_cache:/root/.m2
    networks:
      - portfolio-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: portfolio-frontend-dev
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge

volumes:
  postgres_data:
  backend_maven_cache: